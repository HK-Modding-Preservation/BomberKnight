//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BomberKnight.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class InventoryText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal InventoryText() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BomberKnight.Resources.InventoryText", typeof(InventoryText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A small bag hold together by grass and silk. No liquid will pass its surface, keeping the content dry. Perfect to keep dangerous items like bombs.
        ///
        ///Currently it has space for {0} bombs. ähnelt.
        /// </summary>
        internal static string BombBag_Desc {
            get {
                return ResourceManager.GetString("BombBag_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You can now place bombs, which explodes three seconds later causing major destruction. Can break damaged walls and floors. Holds  ähnelt.
        /// </summary>
        internal static string BombBag_ItemScreen_Desc1 {
            get {
                return ResourceManager.GetString("BombBag_ItemScreen_Desc1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Already contains a few grass bombs. Holds space for 5 bombs. ähnelt.
        /// </summary>
        internal static string BombBag_ItemScreen_Desc2 {
            get {
                return ResourceManager.GetString("BombBag_ItemScreen_Desc2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bomb Bag ähnelt.
        /// </summary>
        internal static string BombBag_Title {
            get {
                return ResourceManager.GetString("BombBag_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specially crafted by high members of the city council. They were developed for amusment on the parties of the higher ranks. After some time, although their explosion don&apos;t harm anything with a shell by itself, they were banned due to concerns of accidently being thrown in spikes while playing around with them. There have been rumours that the guards made this concern up, to take full control of these &quot;toys&quot; for military purposes... ähnelt.
        /// </summary>
        internal static string BounceBomb_Desc {
            get {
                return ResourceManager.GetString("BounceBomb_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bounce Bombs ähnelt.
        /// </summary>
        internal static string BounceBomb_Title {
            get {
                return ResourceManager.GetString("BounceBomb_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A leftover key used for controlled explosions to proceed in the shining caves of the Crystal Peak even further. Ironically the crystals on the other hand became more unpredictable somehow...
        ///
        ///Bombs connected to this piece may not explode on their own in most circumstances, allowing for safer operations. Instead they blow up, after the bomb master crouch to safety. ähnelt.
        /// </summary>
        internal static string Charm_BombMaster_Desc {
            get {
                return ResourceManager.GetString("Charm_BombMaster_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bomb Master ähnelt.
        /// </summary>
        internal static string Charm_BombMaster_Title {
            get {
                return ResourceManager.GetString("Charm_BombMaster_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Glowing ash is stuck to this charm. Whatever had posession of this before, surely liked the burning pain of explosions.
        ///
        ///Protects the bearer from their own explosions. Sometimes the fire may cauterize wounds on their shell as well. ähnelt.
        /// </summary>
        internal static string Charm_Pyromaniac_Desc {
            get {
                return ResourceManager.GetString("Charm_Pyromaniac_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pyromaniac ähnelt.
        /// </summary>
        internal static string Charm_Pyromaniac_Title {
            get {
                return ResourceManager.GetString("Charm_Pyromaniac_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A badge granted to the valiant heroes which tried their best to get use from every single leftover shell piece they could find, saving their kingdom by creating near endless resources.
        ///
        ///Holder of these badges may find more &quot;explosionable&quot; material. ähnelt.
        /// </summary>
        internal static string Charm_ShellSalvager_Desc {
            get {
                return ResourceManager.GetString("Charm_ShellSalvager_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shell Savager ähnelt.
        /// </summary>
        internal static string Charm_ShellSalvager_Title {
            get {
                return ResourceManager.GetString("Charm_ShellSalvager_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Formed by the banished Moth tribe members to surpass death and revive with a new glow. The sealed souls inside of this vessel however, left behind a furious amalgamation with the only desire to finally go the afterlife. Releasing it may cause it&apos;s scream to echo repeatedly in the realm of the living ones. But maybe after some time, they can finally rest in peace? ähnelt.
        /// </summary>
        internal static string EchoBomb_Desc {
            get {
                return ResourceManager.GetString("EchoBomb_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Echo Bombs ähnelt.
        /// </summary>
        internal static string EchoBomb_Title {
            get {
                return ResourceManager.GetString("EchoBomb_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;i&gt;... Lost in his greed to obtain a kings wealth, a bug pour the gold blood over everything he could find. The blood quickly turned all objects touched into massive gold. He started to seeing everything as a wealthy property. Eventually he turned even his own family in gold statues, not considering them as bugs anymore. At one point, he looked at himself in the mirror, knowing what he&apos;s missing to truly have a &quot;golden&quot; life...&lt;i&gt; 
        ///-The Golden Curse ähnelt.
        /// </summary>
        internal static string GoldBomb_Desc {
            get {
                return ResourceManager.GetString("GoldBomb_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gold Bombs ähnelt.
        /// </summary>
        internal static string GoldBomb_Title {
            get {
                return ResourceManager.GetString("GoldBomb_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Carefully crafted by Moss Knights for desperate times, to overcome a siege in their territory. Effective at what it should do, no more not less. ähnelt.
        /// </summary>
        internal static string GrassBomb_Desc {
            get {
                return ResourceManager.GetString("GrassBomb_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grass Bombs ähnelt.
        /// </summary>
        internal static string GrassBomb_Title {
            get {
                return ResourceManager.GetString("GrassBomb_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die These objects are fueled with the power of the blue blood, granting them an excessive amount of power at the cost of life force. No one was able to store these bombs as the king would quickly ban everything related to the blue curse and due to the fact they are incredible unstable. ähnelt.
        /// </summary>
        internal static string PowerBomb_Desc {
            get {
                return ResourceManager.GetString("PowerBomb_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power Bombs ähnelt.
        /// </summary>
        internal static string PowerBomb_Title {
            get {
                return ResourceManager.GetString("PowerBomb_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Over the ages a few guards lost some ammunition in the Fungal Wastes. It is said that even though those weapons are useless once they roll down the wastes, through the years of being exposed to the spore, they will recover their strength and unleash the initial power amplified by all the spores which now resides inside them. ähnelt.
        /// </summary>
        internal static string SporeBomb_Desc {
            get {
                return ResourceManager.GetString("SporeBomb_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Spore Bombs ähnelt.
        /// </summary>
        internal static string SporeBomb_Title {
            get {
                return ResourceManager.GetString("SporeBomb_Title", resourceCulture);
            }
        }
    }
}
